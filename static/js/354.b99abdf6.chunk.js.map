{"version":3,"file":"static/js/354.b99abdf6.chunk.js","mappings":"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","sources":["components/Cast/Cast.jsx","components/Reviews/Reviews.jsx","components/MovieAbouts/MovieAbouts.jsx","components/MovieHeader/MovieHeader.jsx"],"sourcesContent":["import { useNavigate, useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nconst API_KEY = '2d700e8ba323a7e3c0af25b2bd411244';\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [credits, setCredits] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`)\n      .then(res => {\n        setCredits(res.data);\n      });\n  }, [movieId]);\n  return (\n    <ul className={'cast-list'} hidden={true}>\n      <button onClick={() => {\n        document.querySelector('.cast-list').hidden = true;\n        navigate(`/movies/${movieId}`);\n      }}>Close cast</button>\n      {credits.cast && credits.cast.map(cast => {\n        return (\n          <li key={cast.id}>\n            <img src={cast.profile_path && `https://image.tmdb.org/t/p/w500${cast.profile_path}`} alt={cast.name}\n                 width={'160px'} height={'220px'} />\n            <p>{cast.name}</p>\n            <p>Character: {cast.character}</p>\n          </li>\n        );\n      })}\n    </ul>\n  )\n}\nexport default Cast;\n","import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nconst API_KEY = '2d700e8ba323a7e3c0af25b2bd411244';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    axios.get(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`)\n      .then(res => {\n        setReviews(res.data);\n      });\n  }, [movieId]);\n  return (\n    <ul className={'reviews'} hidden={true}>\n      <button onClick={() => {\n        document.querySelector('.reviews').hidden = true;\n        navigate(`/movies/${movieId}`);\n      }}>Close reviews\n      </button>\n      {reviews.results && reviews.results.map(rev => {\n        return (\n          <li key={rev.id}>\n            <p>{rev.author}</p>\n            <p>{rev.content}</p>\n          </li>\n        );\n      })\n      }\n    </ul>\n  );\n};\n\nexport default Reviews;\n","import { useNavigate, useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport Cast from 'components/Cast/Cast';\nimport axios from 'axios';\nimport Reviews from '../Reviews/Reviews';\nimport MovieHeader from '../MovieHeader/MovieHeader';\n\nconst API_KEY = '2d700e8ba323a7e3c0af25b2bd411244';\n\nconst MovieAbouts = () => {\n  const [selectedMovie, setSelectedMovie] = useState([]);\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n\n    axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n      .then(res => {\n        setSelectedMovie(res.data);\n      });\n  }, [movieId]);\n  const handleCastVisibility = () => {\n    document.querySelector('.cast-list').hidden = false;\n    navigate(`/movies/${movieId}/cast`);\n  };\n  const handleReviewsVisibility = () => {\n    document.querySelector('.reviews').hidden = false;\n    navigate(`/movies/${movieId}/reviews`);\n  };\n  return selectedMovie && (\n    <>\n      <MovieHeader></MovieHeader>\n      <div className={'movie-abouts'}>\n        <div>\n          <img src={selectedMovie.poster_path && `https://image.tmdb.org/t/p/w500${selectedMovie.poster_path}`}\n               alt={selectedMovie.title} className={\"movie-abouts__image\"} />\n        </div>\n        <div>\n          <h2>{selectedMovie.title}</h2>\n          <p>{`User Score: ${(selectedMovie.vote_average * 10).toFixed(2)}%`}</p>\n          <h3>Overview</h3>\n          <p>{selectedMovie.overview}</p>\n          <h4>Genres</h4>\n          <ul>\n            {selectedMovie.genres && selectedMovie.genres.map(genre => {\n              return (\n                <li key={genre.id}>{genre.name}</li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n      <div className={'additionalInfo'}>\n        <div>\n          <p className={\"movie-abouts__additional-info\"}>Additional Information</p>\n          <ul>\n            <li onClick={handleCastVisibility}>Cast</li>\n            <li onClick={handleReviewsVisibility}>Reviews</li>\n          </ul>\n        </div>\n        <Cast></Cast>\n        <Reviews></Reviews>\n      </div>\n    </>\n  );\n};\n\nexport default MovieAbouts;\n","import { useNavigate } from 'react-router-dom';\n\nconst MovieHeader = () => {\n  const navigate = useNavigate();\n  return (\n    <div className={\"movie-header\"}>\n      <p className={\"movie-header__home\"} onClick={() => {\n        navigate('/');\n      }}>Home</p>\n      <p className={\"movie-header__movies\"} onClick={() => {\n        navigate('/movies')\n      }}>Movies</p>\n    </div>\n  )\n}\nexport default MovieHeader;\n"],"names":["movieId","useParams","useState","credits","setCredits","navigate","useNavigate","useEffect","axios","then","res","data","className","hidden","onClick","document","querySelector","cast","map","src","profile_path","alt","name","width","height","character","id","reviews","setReviews","results","rev","author","content","selectedMovie","setSelectedMovie","MovieHeader","poster_path","title","vote_average","toFixed","overview","genres","genre"],"sourceRoot":""}