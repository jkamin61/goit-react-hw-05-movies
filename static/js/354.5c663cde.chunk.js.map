{"version":3,"file":"static/js/354.5c663cde.chunk.js","mappings":"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","sources":["components/Cast/Cast.jsx","components/Reviews/Reviews.jsx","components/MovieAbouts/MovieAbouts.jsx","components/MovieHeader/MovieHeader.jsx"],"sourcesContent":["import { useNavigate, useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nconst API_KEY = '2d700e8ba323a7e3c0af25b2bd411244';\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [credits, setCredits] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`)\n      .then(res => {\n        setCredits(res.data);\n      });\n  }, [movieId]);\n  return (\n    <ul className={'cast-list'} hidden={true}>\n      <button onClick={() => {\n        document.querySelector('.cast-list').hidden = true;\n        navigate(`/movies/${movieId}`);\n      }}>Close cast</button>\n      {credits.cast && credits.cast.map(cast => {\n        return (\n          <li key={cast.id}>\n            <img src={cast.profile_path && `https://image.tmdb.org/t/p/w500${cast.profile_path}`} alt={cast.name}\n                 width={'160px'} height={'220px'} />\n            <p>{cast.name}</p>\n            <p>Character: {cast.character}</p>\n          </li>\n        );\n      })}\n    </ul>\n  )\n}\nexport default Cast;\n","import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport parse from 'html-react-parser';\n\nconst API_KEY = '2d700e8ba323a7e3c0af25b2bd411244';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    axios.get(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`)\n      .then(res => {\n        setReviews(res.data);\n      });\n  }, [movieId]);\n  return (\n    <ul className={'reviews'} hidden={true}>\n      <button onClick={() => {\n        document.querySelector('.reviews').hidden = true;\n        navigate(`/movies/${movieId}`);\n      }}>Close reviews\n      </button>\n      {\n        reviews.results && reviews.results.length === 0 && <p>No reviews</p>\n      }\n      {reviews.results && reviews.results.map(rev => {\n        return (\n          <li key={rev.id}>\n           <h5>{parse(rev.author)}</h5>\n            <p>{parse(rev.content)}</p>\n          </li>\n        );\n      })\n      }\n    </ul>\n  );\n};\n\nexport default Reviews;\n","import { useNavigate, useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport Cast from 'components/Cast/Cast';\nimport axios from 'axios';\nimport Reviews from '../Reviews/Reviews';\nimport MovieHeader from '../MovieHeader/MovieHeader';\n\nconst API_KEY = '2d700e8ba323a7e3c0af25b2bd411244';\n\nconst MovieAbouts = () => {\n  const [selectedMovie, setSelectedMovie] = useState([]);\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n\n    axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n      .then(res => {\n        setSelectedMovie(res.data);\n      });\n  }, [movieId]);\n  const handleCastVisibility = () => {\n    document.querySelector('.cast-list').hidden = false;\n    document.querySelector('.reviews').hidden = true;\n    navigate(`/movies/${movieId}/cast`);\n  };\n  const handleReviewsVisibility = () => {\n    document.querySelector('.reviews').hidden = false;\n    document.querySelector('.cast-list').hidden = true;\n    navigate(`/movies/${movieId}/reviews`);\n  };\n  return selectedMovie && (\n    <>\n      <MovieHeader></MovieHeader>\n      <div className={'movie-abouts'}>\n        <div>\n          <img src={selectedMovie.poster_path && `https://image.tmdb.org/t/p/w500${selectedMovie.poster_path}`}\n               alt={selectedMovie.title} className={\"movie-abouts__image\"} />\n        </div>\n        <div>\n          <h2>{selectedMovie.title}</h2>\n          <p>{`User Score: ${(selectedMovie.vote_average * 10).toFixed(2)}%`}</p>\n          <h3>Overview</h3>\n          <p>{selectedMovie.overview}</p>\n          <h4>Genres</h4>\n          <ul>\n            {selectedMovie.genres && selectedMovie.genres.map(genre => {\n              return (\n                <li key={genre.id}>{genre.name}</li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n      <div className={'additionalInfo'}>\n        <div>\n          <p className={\"movie-abouts__additional-info\"}>Additional Information</p>\n          <ul>\n            <li onClick={handleCastVisibility}>Cast</li>\n            <li onClick={handleReviewsVisibility}>Reviews</li>\n          </ul>\n        </div>\n        <Cast></Cast>\n        <Reviews></Reviews>\n      </div>\n    </>\n  );\n};\n\nexport default MovieAbouts;\n","import { useNavigate } from 'react-router-dom';\n\nconst MovieHeader = () => {\n  const navigate = useNavigate();\n  return (\n    <div className={\"movie-header\"}>\n      <p className={\"movie-header__home\"} onClick={() => {\n        navigate('/goit-react-hw-05-movies');\n      }}>Home</p>\n      <p className={\"movie-header__movies\"} onClick={() => {\n        navigate('/movies')\n      }}>Movies</p>\n    </div>\n  )\n}\nexport default MovieHeader;\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","credits","setCredits","navigate","useNavigate","useEffect","axios","concat","then","res","data","_jsxs","className","hidden","children","_jsx","onClick","document","querySelector","cast","map","src","profile_path","alt","name","width","height","character","id","reviews","setReviews","results","length","rev","parse","author","content","selectedMovie","setSelectedMovie","_Fragment","MovieHeader","poster_path","title","vote_average","toFixed","overview","genres","genre","Cast","Reviews"],"sourceRoot":""}